#! /bin/bash

php=${PHP_BIN:=php}
use_paratest=0
use_coverage=0

help() {
    echo "Tests Runner for PHP Projects"
    echo
    echo -e "\033[33mUsage:\033[0m"
    echo "  scripts/run-tests <path> --xdebug --filter <expr> -p <num> --coverage-html <path> "
    echo
    echo -e "\033[33mOptions:\033[0m"
    echo -e "  \033[32mpath\033[0m                           The path or file that contains test files. "
    echo -e "  \033[32m-p <num>\033[0m                       The number of processes to run tests in parallel. "
    echo -e "  \033[32m--filter <expr>\033[0m                The expression to filter what test methods should be executed. "
    echo -e "  \033[32m--coverage-html <path>\033[0m         Generate html code coverage report in the specified <path>."
    echo -e "  \033[32m-h, --help\033[0m                     Display this help message."
    echo -e "  \033[32m-x, --xdebug\033[0m                   Run tests under XDebug."
    echo
}

params=
xdebug_params="
    -d xdebug.mode=debug
    -d xdebug.start_with_request=yes
    -d xdebug.client_port=9003
    -d xdebug.client_host=127.0.0.1
"
prepare_params() {
    for arg in "$@"; do
        if [[ "$arg" == "-x" || "$arg" == "--xdebug" ]]; then
            params="$params $xdebug_params"
        fi

        if [[ "$arg" =~ "--coverage-" ]]; then
            use_coverage=1
        fi

        if [[ "$arg" == "-p" ]]; then
            use_paratest=1
        fi
    done
}
prepare_params $*

run() {
    if [[ "$use_paratest" == "0" ]]; then
        $php $params vendor/bin/phpunit $*
    elif [[ "$use_coverage" == "1" ]]; then
        $php $params vendor/bin/paratest $*
    else
        $php $params vendor/bin/paratest -f $*
    fi
}

filter_args() {
    args=
    for arg in "$@"; do
        if [[ "$arg" == "-x" || "$arg" == "--xdebug" ]]; then
            continue
        fi

        args="$args $arg"
    done

    echo $args
}

case $1 in
-h | --help)
    help
    ;;
*)
    run $(filter_args $*)
    ;;
esac
